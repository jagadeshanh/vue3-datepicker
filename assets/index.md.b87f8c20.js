import{D as d}from"./chunks/Datepicker.16746ac2.js";import{h as s,o as n,c as l,G as c,O as a}from"./chunks/framework.a1822666.js";const r=a('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>This is a reimplementation of <a href="https://github.com/icehaunter/vuejs-datepicker" target="_blank" rel="noreferrer">vuejs-datepicker</a> in Vue 3 and with greatly cleaned up code.</p><p>All date manipulation and formatting are done via the amazing <a href="https://date-fns.org/" target="_blank" rel="noreferrer"><code>date-fns</code></a> library, so it&#39;s a direct dependency of this picker.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>Datepicker comes with styling, but input itself does not. Attributes fall through to the <code>input</code> element, so you can use classes and styles as you would on any input.</p>',5),i=a(`<h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Package is available on NPM: <a href="https://www.npmjs.com/package/vue3-datepicker" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/vue3-datepicker" alt="npm"></a></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue3-datepicker</span></span></code></pre></div><p>Then import it in your code and use as a usual component:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Datepicker </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue3-datepicker</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> picked </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Datepicker</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">picked</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="compatibility" tabindex="-1">Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;Compatibility&quot;">​</a></h2><p>Package is transpiled and should be usable for everyone with ES6 and above, but the styling of the datepicker itself uses CSS Grid and CSS variables.</p><p>Package uses typescript and ships with TS declarations for its components.</p><h2 id="props-and-attributes" tabindex="-1">Props and attributes <a class="header-anchor" href="#props-and-attributes" aria-label="Permalink to &quot;Props and attributes&quot;">​</a></h2><p>Attribute fallthrough is enabled, so any attribute you apply to the component will be passed down to the input.</p><p>All props which accept formatting strings for dates use <a href="https://date-fns.org/docs/format" target="_blank" rel="noreferrer"><code>date-fns</code> formatting function</a> under the hood, so see that function&#39;s documentation for patterns.</p><p>Main interaction to date selection is done via <code>v-model</code> with <code>Date</code> as expected type of the value passed.</p><p>More in-depth documentation of the props, as well as examples, can be found in <a href="/vue3-datepicker/config.html">Configuration</a></p><table><thead><tr><th>ID</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>upperLimit</code></td><td><code>Date</code></td><td></td><td>Upper limit for available dates for picking</td></tr><tr><td><code>lowerLimit</code></td><td><code>Date</code></td><td></td><td>Lower limit for available dates for picking</td></tr><tr><td><code>startingViewDate</code></td><td><code>Date</code></td><td><code>() =&gt; new Date()</code></td><td>Date on which to focus when empty datepicker is opened. Default is &quot;right now&quot;</td></tr><tr><td><code>disabledDates</code></td><td><code>{ dates: Date[] }</code></td><td></td><td>Dates not available for picking</td></tr><tr><td><code>disabledTime</code></td><td><code>{ dates: Date[] }</code></td><td></td><td>Dates not available for time picking</td></tr><tr><td><code>startingView</code></td><td><code>&#39;time&#39; | </code>&#39;day&#39; | &#39;month&#39; | &#39;year&#39;\`</td><td><code>&#39;day&#39;</code></td><td>View on which the date picker should open. Can be either <code>year</code>, <code>month</code>, or <code>day</code></td></tr><tr><td><code>minimumView</code></td><td><code>&#39;time&#39; | </code>&#39;day&#39; | &#39;month&#39; | &#39;year&#39;\`</td><td><code>&#39;day&#39;</code></td><td>If set, lower-level views won&#39;t show</td></tr><tr><td><code>dayPickerHeadingFormat</code></td><td><code>String</code></td><td><code>LLLL yyyy</code></td><td><code>date-fns</code>-type formatting for a day view heading</td></tr><tr><td><code>dayFormat</code></td><td><code>String</code></td><td><code>dd</code></td><td><code>date-fns</code>-type formatting for each day on the day view</td></tr><tr><td><code>weekdayFormat</code></td><td><code>String</code></td><td><code>EE</code></td><td><code>date-fns</code>-type formatting for a line of weekdays on day view</td></tr><tr><td><code>inputFormat</code></td><td><code>String</code></td><td><code>yyyy-MM-dd</code></td><td><code>date-fns</code>-type format in which the string in the input should be both parsed and displayed</td></tr><tr><td><code>locale</code></td><td><a href="https://date-fns.org/v2.16.1/docs/I18n#usage" target="_blank" rel="noreferrer"><code>Locale</code></a></td><td><code>date-fns/locale/en</code></td><td><a href="https://date-fns.org/v2.16.1/docs/I18n#usage" target="_blank" rel="noreferrer"><code>date-fns</code> locale object</a>. Used in string formatting (see default <code>dayPickerHeadingFormat</code>)</td></tr><tr><td><code>disabled</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Disables datepicker and prevents it&#39;s opening</td></tr><tr><td><code>typeable</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Allows user to input date manually</td></tr><tr><td><code>weekStartsOn</code></td><td><code>Number</code></td><td>1</td><td>Day on which the week should start. Number from 0 to 6, where 0 is Sunday and 6 is Saturday. Week starts with a Monday (1) by default</td></tr><tr><td><code>clearable</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Allows clearing the selected date and setting the value to <code>null</code></td></tr><tr><td><code>allowOutsideInterval</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Allows user to click dates outside of current interval</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><ul><li><code>opened</code>: Emitted every time the popup opens, including on field focus</li><li><code>closed</code>: Emitted every time the popup closes, including on field blur</li><li><code>decadePageChanged</code>: Emitted when a page is changed on the year picker view, displaying a different decade. Has a date that is included in the shown decade as an argument.</li><li><code>yearPageChanged</code>: Emitted when a page is changed on the month picker view, displaying a different year. Has a date that is included in the shown year as an argument.</li><li><code>monthPageChanged</code>: Emitted when a page is changed on the day picker view, displaying a different month. Has a date that is included in the shown month as an argument.</li></ul><h2 id="styling" tabindex="-1">Styling <a class="header-anchor" href="#styling" aria-label="Permalink to &quot;Styling&quot;">​</a></h2><p>Styling is done via CSS variables, which control colors used in the popup. All variables, as well as styling example and playground can be found in <a href="/vue3-datepicker/config.html#styling-example-and-playground">Configuration section</a></p>`,18),f=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),p={name:"index.md"},g=Object.assign(p,{setup(h){const e=s(new Date);return(y,t)=>(n(),l("div",null,[r,c(d,{modelValue:e.value,"onUpdate:modelValue":t[0]||(t[0]=o=>e.value=o)},null,8,["modelValue"]),i]))}});export{f as __pageData,g as default};
